context:
  name: open-dpcpp-toolkit
  version: 20.0.0

recipe:
  name: ${{ name|lower }}
  version: ${{ version }}

source:
  # If getting the source from GitHub, remove the line above,
  # uncomment the line below, and modify as needed. Use releases if available:
  # url: https://github.com/simplejson/simplejson/releases/download/{{ version }}/simplejson-{{ version }}.tar.gz
  # and otherwise fall back to archive:
  # url: https://github.com/simplejson/simplejson/archive/v{{ version }}.tar.gz
  # sha256 is the preferred checksum -- you can get it for a file with:
  #  `openssl sha256 <file name>`.
  # You may need the openssl package, available on conda-forge:
  #  `conda install openssl -c conda-forge``
  git: https://github.com/NAGAGroup/CodeAccelerate-SYCLBuildKit.git
  branch: main

outputs:
  - package:
      name: open-dpcpp-libs-devel
    build:
      number: 0
      skip:
        - win
        - osx
        - match(cuda_compiler_version, "<12")
      script: install-libs-devel.sh
    requirements:
      run:
        - open-dpcpp-libs ${{ version }}

  - package:
      name: open-dpcpp-compiler
    build:
      number: 0
      skip:
        - win
        - osx
        - match(cuda_compiler_version, "<12")
      script: install-dpcpp.sh
    requirements:
      run:
        - cuda-toolkit ${{ cuda_compiler_version }}
        - open-dpcpp-libs ${{ version }}
        - open-dpcpp-libs-devel ${{ version }}
      run_exports:
        strong:
          - ${{ pin_subpackage('open-dpcpp-libs', exact=True) }}

  - package:
      name: open-dpcpp-toolkit
    build:
      number: 0
      skip:
        - win
        - osx
        - match(cuda_compiler_version, "<12")
      script: build.sh
    requirements:
      build:
        # If your project compiles code (such as a C extension) then add the required compilers as separate entries here.
        # Compilers are named 'c', 'cxx', 'fortran', among others
        - ${{ compiler('c') }}
        - ${{ compiler('cxx') }}
        - ${{ compiler('cuda') }}
        - ${{ stdlib('c') }}
        - ccache
        - git
        - python >3
        - cmake 3.24
        - pkg-config
        - pkgconfig
        - ninja
        - wget
        - git
        - lld
      host:
        - cuda-toolkit ${{ cuda_compiler_version }}
        - zstd-static
        - libxml2
        - zlib
        - libhwloc
        - tbb-devel
      run:
        - open-dpcpp-libs ${{ version }}
        - open-dpcpp-libs-devel ${{ version }}
        - open-dpcpp-compiler ${{ version }}
      run_exports:
        strong:
          - ${{ pin_subpackage('open-dpcpp-libs') }}

  - package:
      name: open-dpcpp-libs
    build:
      number: 0
      skip:
        - win
        - osx
        - match(cuda_compiler_version, "<12")
      script: install-libs.sh
    requirements:
      run:
        - libxml2
        - zlib
        - libhwloc
        - tbb-devel
        - cuda-libraries ${{ cuda_compiler_version }}
      run_exports:
        - open-dpcpp-libs ${{ version }}
        - ${{ pin_compatible('cuda-libraries') }}
      run_constraints:
        - libllvm 999999999
        - libclang 999999999
        - libclang-cpp 999999999
        - clang-tools 999999999
        - libllvmspirv 999999999

# tests:
#   script: test.sh
#   requirements:
#     run:
#       - cmake 3.24
#   files:
#     source:
#       - activation/
#       - llvm/

about:
  summary: DPC++ toolkit with nvidia support
  description: |
    DPC++ is the Intel's open-source clang toolkit for sycl. DPC++ 
    supports Nvidia GPUs, making the switch from CUDA possible without 
    new hardware.
  # Remember to specify the license variants for BSD, Apache, GPL, and LGPL.
  # Use the SPDX identifier, e.g: GPL-2.0-only instead of GNU General Public License version 2.0
  # See https://spdx.org/licenses/
  license: Apache-2.0
  # It is required to include a license file in the package,
  # (even if the license doesn't require it) using the license_file entry.
  # Please also note that some projects have multiple license files which all need to be added using a valid yaml list.
  # See https://docs.conda.io/projects/conda-build/en/latest/resources/define-metadata.html#license-file
  license_file:
    - LICENSE.TXT
  # The doc_url and dev_url are optional.
  # doc_url: https://simplejson.readthedocs.io/
  # dev_url: https://github.com/simplejson/simplejson
  homepage: https://github.com/NAGAGroup/CodeAccelerate-SYCLBuildKit

extra:
  recipe-maintainers:
    # GitHub IDs for maintainers of the recipe.
    # Always check with the people listed below if they are OK becoming maintainers of the recipe. (There will be spam!)
    - jackm97
